
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # Basic ngx_small_light configuration
    server {
        listen       8085;
        server_name  localhost;

        root /ngx_small_light/sample;
        error_log /ngx_small_light/logs/smllght_error.log debug;

        small_light on;
        small_light_material_dir /ngx_small_light/sample/icons;
        
        location ~ small_light[^/]*/(.+)$ {
            set $file $1;
            rewrite ^ /$file;
        }
    }

    # Juragan-CDN configuration
    map $http_accept $detect_convert {
        default "";
        "~*webp.*avif" 1;
        "~*avif.*webp" 2;
        "~*webp"  1;
        "~*avif"  2;        
    }

    map $is_args:$detect_convert $convert {
        :1 '?of=webp';
        ?:1 '&of=webp';
        :2 '?of=avif';
        ?:2 '&of=avif';
        :0 '';
        ?:0 '';
    }

    server {
        listen 8084 default_server;

        location / {
            proxy_pass http://small_light$uri$is_args$args$convert;
        }
    }

    upstream small_light{
        server 127.0.0.1:8086 max_fails=1     fail_timeout=900s;
    }

    server {
        listen 8086 default_server;
        root /ngx_small_light/sample;
        error_log /ngx_small_light/logs/cdn_error.log debug;
        access_log /ngx_small_light/logs/cdn_access.log;

        error_page   500 502 503 504    =404 /50x.html;
        error_page 415 =404 /_.gif;

        location = /_.gif {
            empty_gif;
        }

        small_light on;
        small_light_getparam_mode on;
        small_light_pattern_define perf jpeghint=y,progressive=y,autoorient=y,rmprof=y;
        small_light_buffer 10m;


        rewrite (?i)^/r(30|60|100|150|200|250|255|320|480|540|720|960|1080)x(30|60|100|150|200|250|255|320|480|540|720|960|1080)/(.+\.(jpg|jpeg|png))$ /$3?p=perf&dw=$1&dh=$2 break;
        rewrite (?i)^/c(30|60|100|150|200|250|255|320|480|540|720|960|1080)x(30|60|100|150|200|250|255|320|480|540|720|960|1080)/(.+\.(jpg|jpeg|png))$ /$3?p=perf&dw=$1&dh=$1&cw=$2&ch=$2&da=s break;
        rewrite (?i)^/b/r(30|60|100|150|200|250|255|320|480|540|720|960|1080)x(30|60|100|150|200|250|255|320|480|540|720|960|1080)/(.+\.(jpg|jpeg|png|gif))$ /$3?p=perf&dw=$1&dh=$2&blur=5x10 break;
        rewrite (?i)^/b/c(30|60|100|150|200|250|255|320|480|540|720|960|1080)x(30|60|100|150|200|250|255|320|480|540|720|960|1080)/(.+\.(jpg|jpeg|png|gif))$ /$3?p=perf&dw=$1&dh=$1&cw=$2&ch=$2&da=s&blur=5x10 break;
        rewrite (?i)^/b/(.+\.(jpg|jpeg|png|gif))$ /$1?p=perf&blur=5x10 break;
        rewrite (?i)^/bt/r(30|60|100|150|200|250|255|320|480|540|720|960|1080)x(30|60|100|150|200|250|255|320|480|540|720|960|1080)/(.+\.(jpg|jpeg|png|gif))$ /$3?p=perf&dw=$1&dh=$2&bluroptimize=y break;
        rewrite (?i)^/bt/c(30|60|100|150|200|250|255|320|480|540|720|960|1080)x(30|60|100|150|200|250|255|320|480|540|720|960|1080)/(.+\.(jpg|jpeg|png|gif))$ /$3?p=perf&dw=$1&dh=$1&cw=$2&ch=$2&da=s&bluroptimize=y break;
        rewrite (?i)^/bt/(.+\.(jpg|jpeg|png|gif))$ /$1?p=perf&bluroptimize=y break;
    }
}
